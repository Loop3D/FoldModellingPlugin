Search.setIndex({"docnames": ["API", "FoldOptLib", "FoldOptLib.examples", "FoldOptLib.fold_modelling", "FoldOptLib.from_loopstructural", "FoldOptLib.helper", "FoldOptLib.input", "FoldOptLib.ipywidgets_interface", "FoldOptLib.objective_functions", "FoldOptLib.optimisers", "FoldOptLib.splot", "FoldOptLib.visualisation", "generated/FoldOptLib.FoldOptLib", "index", "modules"], "filenames": ["API.rst", "FoldOptLib.rst", "FoldOptLib.examples.rst", "FoldOptLib.fold_modelling.rst", "FoldOptLib.from_loopstructural.rst", "FoldOptLib.helper.rst", "FoldOptLib.input.rst", "FoldOptLib.ipywidgets_interface.rst", "FoldOptLib.objective_functions.rst", "FoldOptLib.optimisers.rst", "FoldOptLib.splot.rst", "FoldOptLib.visualisation.rst", "generated/FoldOptLib.FoldOptLib.rst", "index.rst", "modules.rst"], "titles": ["API", "FoldOptLib package", "FoldOptLib.examples package", "FoldOptLib.fold_modelling package", "FoldOptLib.from_loopstructural package", "FoldOptLib.helper package", "FoldOptLib.input package", "FoldOptLib.ipywidgets_interface package", "FoldOptLib.objective_functions package", "FoldOptLib.optimisers package", "FoldOptLib.splot package", "FoldOptLib.visualisation package", "FoldOptLib", "Welcome to FoldOptLib\u2019s documentation!", "FoldOptLib"], "terms": {"exampl": [1, 5, 14], "misc_funct": [1, 14], "sample_random_dataset": [1, 2], "fold_model": [1, 14], "base_fold_frame_build": [1, 14], "basefoldframebuild": [1, 3], "build_fold_fram": [1, 3], "initialise_model": [1, 3], "engin": [1, 14], "foldmodel": [1, 3, 9], "data": [1, 3, 5, 6, 9], "bounding_box": [1, 3, 6, 9], "model": [1, 3, 5, 6, 8, 9], "gradient_data": [1, 3], "point": [1, 3, 5, 8], "kwarg": [1, 3, 5, 8, 9], "axial_surfac": [1, 3, 5, 9], "scaled_point": [1, 3], "calculate_folded_foliation_vector": [1, 3], "calculate_svariogram": [1, 3], "create_and_build_fold_ev": [1, 3], "fit_fourier_seri": [1, 3], "get_predicted_foli": [1, 3], "process_axial_surface_proposit": [1, 3], "fold_funct": [1, 3], "simple_fold_frame_build": [1, 14], "from_loopstructur": [1, 14], "helper": [1, 10, 14], "util": [1, 14], "axial_plane_stereonet": [1, 5], "calculate_intersection_lin": [1, 5, 9], "calculate_semivariogram": [1, 5], "clean_knowledge_dict": [1, 5], "create_dataset": [1, 5], "create_dict": [1, 5], "create_fold_frame_dataset": [1, 5], "create_gradient_dict": [1, 5], "fourier_seri": [1, 5], "fourier_series_x_intercept": [1, 5], "get_fold_curv": [1, 5], "get_predicted_rotation_angl": [1, 5], "get_wavelength_guess": [1, 5], "normal_vector_to_strike_and_dip": [1, 5], "objective_wrapp": [1, 5], "rotate_vector": [1, 5], "save_load_object": [1, 5], "strike_dip_to_vector": [1, 5], "input": [1, 8, 9, 14], "input_data_check": [1, 14], "checkinputdata": [1, 6], "folded_foliation_data": [1, 6], "knowledge_constraint": [1, 6, 8, 9], "check_bounding_box": [1, 6], "check_foliation_data": [1, 6], "check_input_data": [1, 6], "check_input_geological_knowledg": [1, 6], "input_data_processor": [1, 14], "inputdataprocessor": [1, 6], "process_data": [1, 6], "ipywidgets_interfac": [1, 14], "knowledge_input": [1, 14], "create_mu_widget": [1, 7], "create_value_widget": [1, 7], "display_dict_select": [1, 7], "on_add_button_click": [1, 7], "on_constraint_chang": [1, 7], "on_sub_constraint_chang": [1, 7], "objective_funct": [1, 9, 14], "axial_plan": [1, 5, 14], "is_axial_plane_compat": [1, 8], "gaussian": [1, 14], "gaussian_log_likelihood": [1, 8], "loglikelihood": [1, 8, 9], "loglikelihood_axial_surfac": [1, 8], "loglikelihood_fourier_seri": [1, 8], "geological_knowledg": [1, 3, 5, 6, 9, 14], "geologicalknowledgefunct": [1, 8, 9], "asymmetry_objective_funct": [1, 8], "axial_surface_objective_funct": [1, 8], "axial_trace_objective_funct": [1, 8], "fold_axis_wavelength_objective_funct": [1, 8], "hinge_angle_objective_funct": [1, 8], "setup_objective_funct": [1, 8], "setup_objective_functions_for_restricted_mod": [1, 8], "tightness_objective_funct": [1, 8], "wavelength_objective_funct": [1, 8], "check_fourier_paramet": [1, 8], "lambda_objective_funct": [1, 14], "lambdaobjectivefunct": [1, 8], "make_objective_funct": [1, 8], "least_squar": [1, 14], "leastsquaresfunct": [1, 8], "rotation_angl": [1, 3, 8, 9], "fold_fram": [1, 3, 5, 8, 10], "square_residu": [1, 8], "huber_loss": [1, 8], "soft_l1_loss": [1, 8], "cost": [1, 8], "von_mises_fish": [1, 14], "vonmisesfish": [1, 8], "draw_sampl": [1, 8], "logpdf": [1, 8, 9], "pdf": [1, 8], "optimis": [1, 3, 6, 8, 14], "axial_surface_optimis": [1, 14], "axialsurfaceoptimis": [1, 9], "angle_optimis": [1, 9], "generate_initial_guess": [1, 9], "mle_optimis": [1, 9], "setup_optimis": [1, 9], "base_optimis": [1, 14], "fold_optimis": [1, 14], "foldoptimis": [1, 9], "optimise_with_differential_evolut": [1, 9], "optimise_with_trust_region": [1, 9], "prepare_and_setup_knowledge_constraint": [1, 9], "fourier_optimis": [1, 14], "fourierseriesoptimis": [1, 9], "fold_frame_coordin": [1, 3, 5, 8, 9], "x": [1, 5, 6, 8, 9], "splot": [1, 14], "splot_processor": [1, 14], "splotprocessor": [1, 8, 10], "calculate_asymmetri": [1, 10], "calculate_splot": [1, 10], "calculate_tight": [1, 10], "find_amax_amin": [1, 10], "visualis": [1, 14], "grid": 2, "sample_s": 2, "2": [2, 5], "seed": [2, 8, 9], "180": 2, "sourc": [2, 3, 5, 6, 7, 8, 9, 10], "class": [3, 6, 8, 9, 10], "base": [3, 6, 8, 9, 10], "abc": [3, 9], "abstract": [3, 9], "axial_norm": 3, "ndarrai": [3, 5, 6, 8, 9], "none": [3, 5, 6, 9], "build": 3, "fold": [3, 5, 6, 8, 9, 10], "frame": [3, 5, 8, 9, 10], "setup": [3, 8, 9], "bound": [3, 6, 8, 9], "box": [3, 6, 9], "datafram": [3, 5, 6, 9], "list": [3, 8, 9], "dict": [3, 6, 8, 9], "str": [3, 5, 8, 9], "ani": [3, 5, 8, 9], "A": [3, 5, 6, 8, 9], "us": [3, 5, 6, 8, 9, 10], "process": [3, 8], "type": [3, 5, 6, 8, 9, 10], "pd": [3, 5, 6], "geologicalmodel": 3, "object": [3, 5, 6, 8, 9, 10], "built": 3, "initialis": [3, 9], "gradient": [3, 5], "extract": 3, "from": [3, 5, 8, 9, 10], "np": [3, 5, 8, 9], "coordin": [3, 5, 9, 10], "addit": [3, 8, 9], "keyword": [3, 8, 9], "argument": [3, 8, 9], "axial": [3, 5, 8, 9], "surfac": [3, 5, 8, 9], "scale": 3, "utm": 3, "No": 3, "method": [3, 8, 9, 10], "defin": [3, 8, 9], "yet": 3, "thi": [3, 8, 9], "function": [3, 5, 8, 9, 10], "proposit": 3, "iter": [3, 8], "updat": 3, "creat": [3, 8], "add": [3, 6, 9], "interpol": [3, 9], "paramet": [3, 5, 8, 9], "The": [3, 5, 6, 8, 9, 10], "normal": [3, 5, 9], "vector": [3, 5, 8, 9], "return": [3, 5, 6, 8, 9], "calcul": [3, 5, 8, 9, 10], "foliat": [3, 5, 6, 8, 9], "predict": [3, 8, 9], "bed": [3, 6, 8], "float": [3, 5, 8, 9, 10], "": [3, 8, 9], "variogram": 3, "semi": 3, "rotat": [3, 5, 8, 9, 10], "angl": [3, 5, 8, 9, 10], "more": [3, 9], "detail": 3, "about": 3, "see": 3, "grose": 3, "et": 3, "al": 3, "2017": 3, "depend": [3, 9], "axis_wl": 3, "limb_wl": 3, "either": [3, 5, 6, 8], "initi": [3, 9], "guess": [3, 5, 9], "axi": [3, 5, 8], "limb": [3, 5, 8], "fourier": [3, 8, 9, 10], "seri": [3, 8, 9], "foldev": 3, "event": 3, "i": [3, 5, 6, 8, 9, 10], "first": [3, 8], "normalis": [3, 5, 9], "av_fold_axi": 3, "If": [3, 5, 6, 8, 9], "set": [3, 5, 8, 9, 10], "true": [3, 6, 9], "averag": 3, "fals": [3, 9], "down": 3, "which": [3, 8, 9], "case": 3, "noncylindr": 3, "knowledge_typ": 3, "fold_limb_rotation_angl": 3, "fit": [3, 8], "option": [3, 5, 8, 9], "knowledg": [3, 6, 8, 9], "fold_axis_rotation_angl": 3, "default": [3, 5, 6, 8, 9], "result": [3, 9], "get": 3, "geolog": [3, 5, 6, 8, 9], "xyz": [3, 5], "ar": [3, 8, 9], "each": [3, 5, 8, 9], "dataset": [3, 5], "90": 3, "degre": [3, 5, 8, 10], "perpendicular": 3, "y": [3, 5, 6, 8, 9], "param": [3, 5, 9], "strike": [5, 6, 9], "dip": [5, 6, 9], "plane": [5, 8], "stereonet": 5, "given": [5, 8, 10], "credit": 5, "http": 5, "mplstereonet": 5, "readthedoc": 5, "io": 5, "en": 5, "latest": 5, "html": 5, "tupl": [5, 9], "folded_foli": [5, 9], "intersect": [5, 9], "lineat": [5, 9], "fold_rot": 5, "lag": 5, "nlag": 5, "vec": 5, "name": [5, 8], "s0": 5, "coord": 5, "int": [5, 8, 9], "0": [5, 8, 9], "make": 5, "one": [5, 8], "unit": [5, 8], "featur": 5, "where": [5, 8], "row": 5, "repres": [5, 8, 9], "its": 5, "z": [5, 6, 8, 9], "gx": [5, 6], "gy": [5, 6], "gz": [5, 6], "feature_nam": [5, 6], "nx": 5, "ny": 5, "nz": 5, "c0": 5, "c1": 5, "c2": 5, "w": 5, "popt": 5, "geological_featur": 5, "curv": [5, 8, 10], "1": [5, 8], "provid": [5, 6, 8, 9], "valu": [5, 8, 9, 10], "correspond": [5, 8], "theta": [5, 8, 10], "size": [5, 8], "normal_vector": 5, "func1": 5, "func2": 5, "v": [5, 8, 10], "dimens": 5, "around": 5, "origin": 5, "matrix": 5, "radian": [5, 10], "3": [5, 9], "obj": 5, "file_path": 5, "mode": [5, 6, 8], "save": 5, "load": 5, "python": 5, "file": 5, "dill": 5, "librari": 5, "path": 5, "should": [5, 8], "oper": 5, "must": 5, "otherwis": [5, 6], "rais": [5, 6, 8], "valueerror": [5, 6, 8], "check": [6, 9], "relat": 6, "area": 6, "nd": 6, "arrai": [6, 8, 10], "constraint": [6, 8, 9], "panda": 6, "ha": 6, "correct": [6, 8], "column": 6, "dictionari": [6, 8, 9], "format": [6, 9], "numpi": [6, 8], "all": 6, "an": [6, 8, 9], "follow": [6, 9], "minx": 6, "mini": 6, "minz": 6, "maxx": 6, "maxi": 6, "maxz": 6, "verifi": [6, 8], "nest": 6, "todo": [6, 9], "support": 6, "restrict": [6, 8], "expect": 6, "error": 6, "bool": [6, 9], "constraint_dropdown": 7, "sub_constraint_dropdown": 7, "sub_constraint": 7, "chang": 7, "v1": 8, "v2": 8, "differ": [8, 9], "between": [8, 9], "observ": [8, 9], "geometr": 8, "compat": 8, "sum": 8, "close": 8, "second": 8, "same": 8, "shape": 8, "b": 8, "mu": 8, "sigma": 8, "log": [8, 9], "likelihood": [8, 9], "distribut": [8, 9], "mean": 8, "standard": 8, "deviat": [8, 10], "formula": 8, "union": [8, 9], "less": 8, "than": 8, "equal": 8, "y_pred": 8, "vonmis": 8, "asymmetri": [8, 10], "These": 8, "typeerror": 8, "doe": 8, "have": [8, 9], "least": 8, "4": 8, "evalu": 8, "everi": 8, "keyerror": 8, "requir": 8, "kei": 8, "found": 8, "axial_trac": 8, "neg": 8, "trace": 8, "predefin": 8, "constant": [8, 9], "999": 8, "penalis": 8, "minimis": [8, 9], "algorithm": [8, 9], "wavelength": [8, 9], "hinge_angl": 8, "hing": 8, "map": 8, "dynam": 8, "call": 8, "nonlinearconstraint": [8, 9], "prepar": [8, 9], "lower": 8, "upper": 8, "up": [8, 9], "scipi": [8, 9], "optim": [8, 9], "It": [8, 9], "also": 8, "onli": 8, "when": [8, 9], "cannot": 8, "leav": 8, "space": [8, 9], "drawback": 8, "studi": 8, "geometri": [8, 9], "well": 8, "info": [8, 9], "tight": [8, 10], "lambda_funct": 8, "lambda": 8, "arg": [8, 9], "wrapper": 8, "take": 8, "callabl": [8, 9], "squar": 8, "residu": 8, "_y": 8, "delta": 8, "5": 8, "huber": 8, "loss": 8, "soft": 8, "l1": 8, "kappa": 8, "von": [8, 9], "mise": [8, 9], "fisher": [8, 9], "vmf": 8, "can": 8, "maximum": [8, 9, 10], "estim": [8, 9], "mle": [8, 9], "problem": [8, 9], "draw": 8, "sampl": 8, "random_st": 8, "random": [8, 9], "number": [8, 9], "gener": [8, 9], "drawn": 8, "3d": 8, "integ": 8, "logarithm": 8, "probabl": 8, "densiti": 8, "inherit": 9, "strike_dip": 9, "contain": 9, "angle_differ": 9, "actual": 9, "note": 9, "differenti": 9, "evolut": 9, "predicted_foli": 9, "valid": 9, "perform": 9, "run": 9, "opt": 9, "exist": 9, "solver": 9, "_geological_knowledg": 9, "baseoptimis": 9, "differential_evolut": 9, "stern": 9, "price": 9, "1997": 9, "1953": 9, "init": 9, "halton": 9, "maxit": 9, "5000": 9, "80": 9, "polish": 9, "strategi": 9, "best2exp": 9, "mutat": 9, "99": 9, "solv": 9, "document": 9, "variabl": 9, "min": 9, "max": 9, "pair": 9, "element": 9, "specifi": 9, "how": [9, 10], "popul": 9, "over": 9, "entir": 9, "evolv": 9, "pseudo": 9, "phase": 9, "wa": 9, "test": 9, "proven": 9, "explor": 9, "effici": 9, "solut": 9, "x0": 9, "trust": 9, "region": 9, "linspac": 9, "100": 9, "everywher": 9, "here": 9, "measur": 10, "much": 10, "symmetri": 10, "pass": 10, "ref_fold_fram": 10, "coeff": 10, "determin": 10, "specif": 10, "metric": 10, "find": 10, "amax": 10, "amin": 10, "minimum": 10, "api": 13, "packag": [13, 14], "index": 13, "modul": [13, 14], "search": 13, "page": 13, "subpackag": 14, "submodul": 14, "content": 14, "version": 14}, "objects": {"": [[12, 0, 0, "-", "FoldOptLib"]], "FoldOptLib": [[2, 0, 0, "-", "examples"], [3, 0, 0, "-", "fold_modelling"], [4, 0, 0, "-", "from_loopstructural"], [5, 0, 0, "-", "helper"], [6, 0, 0, "-", "input"], [7, 0, 0, "-", "ipywidgets_interface"], [8, 0, 0, "-", "objective_functions"], [9, 0, 0, "-", "optimisers"], [10, 0, 0, "-", "splot"], [1, 0, 0, "-", "version"], [11, 0, 0, "-", "visualisation"]], "FoldOptLib.examples": [[2, 0, 0, "-", "misc_functions"]], "FoldOptLib.examples.misc_functions": [[2, 1, 1, "", "sample_random_dataset"]], "FoldOptLib.fold_modelling": [[3, 0, 0, "-", "base_fold_frame_builder"], [3, 0, 0, "-", "engine"], [3, 0, 0, "-", "simple_fold_frame_builder"]], "FoldOptLib.fold_modelling.base_fold_frame_builder": [[3, 2, 1, "", "BaseFoldFrameBuilder"]], "FoldOptLib.fold_modelling.base_fold_frame_builder.BaseFoldFrameBuilder": [[3, 3, 1, "", "build_fold_frame"], [3, 3, 1, "", "initialise_model"]], "FoldOptLib.fold_modelling.engine": [[3, 2, 1, "", "FoldModel"], [3, 1, 1, "", "fold_function"]], "FoldOptLib.fold_modelling.engine.FoldModel": [[3, 4, 1, "", "axial_surface"], [3, 4, 1, "", "bounding_box"], [3, 3, 1, "", "build_fold_frame"], [3, 3, 1, "", "calculate_folded_foliation_vectors"], [3, 3, 1, "", "calculate_svariogram"], [3, 3, 1, "", "create_and_build_fold_event"], [3, 4, 1, "", "data"], [3, 3, 1, "", "fit_fourier_series"], [3, 3, 1, "", "get_predicted_foliation"], [3, 4, 1, "", "gradient_data"], [3, 3, 1, "", "initialise_model"], [3, 4, 1, "", "kwargs"], [3, 4, 1, "", "model"], [3, 4, 1, "", "points"], [3, 3, 1, "", "process_axial_surface_proposition"], [3, 4, 1, "", "scaled_points"]], "FoldOptLib.helper": [[5, 0, 0, "-", "utils"]], "FoldOptLib.helper.utils": [[5, 1, 1, "", "axial_plane_stereonet"], [5, 1, 1, "", "calculate_intersection_lineation"], [5, 1, 1, "", "calculate_semivariogram"], [5, 1, 1, "", "clean_knowledge_dict"], [5, 1, 1, "", "create_dataset"], [5, 1, 1, "", "create_dict"], [5, 1, 1, "", "create_fold_frame_dataset"], [5, 1, 1, "", "create_gradient_dict"], [5, 1, 1, "", "fourier_series"], [5, 1, 1, "", "fourier_series_x_intercepts"], [5, 1, 1, "", "get_fold_curves"], [5, 1, 1, "", "get_predicted_rotation_angle"], [5, 1, 1, "", "get_wavelength_guesses"], [5, 1, 1, "", "normal_vector_to_strike_and_dip"], [5, 1, 1, "", "objective_wrapper"], [5, 1, 1, "", "rotate_vector"], [5, 1, 1, "", "save_load_object"], [5, 1, 1, "", "strike_dip_to_vector"], [5, 1, 1, "", "strike_dip_to_vectors"]], "FoldOptLib.input": [[6, 0, 0, "-", "input_data_checker"], [6, 0, 0, "-", "input_data_processor"]], "FoldOptLib.input.input_data_checker": [[6, 2, 1, "", "CheckInputData"]], "FoldOptLib.input.input_data_checker.CheckInputData": [[6, 4, 1, "", "bounding_box"], [6, 3, 1, "", "check_bounding_box"], [6, 3, 1, "", "check_foliation_data"], [6, 3, 1, "", "check_input_data"], [6, 3, 1, "", "check_input_geological_knowledge"], [6, 4, 1, "", "folded_foliation_data"], [6, 4, 1, "", "knowledge_constraints"]], "FoldOptLib.input.input_data_processor": [[6, 2, 1, "", "InputDataProcessor"]], "FoldOptLib.input.input_data_processor.InputDataProcessor": [[6, 3, 1, "", "process_data"]], "FoldOptLib.ipywidgets_interface": [[7, 0, 0, "-", "knowledge_input"]], "FoldOptLib.ipywidgets_interface.knowledge_input": [[7, 1, 1, "", "create_mu_widgets"], [7, 1, 1, "", "create_value_widgets"], [7, 1, 1, "", "display_dict_selection"], [7, 1, 1, "", "on_add_button_click"], [7, 1, 1, "", "on_constraint_change"], [7, 1, 1, "", "on_sub_constraint_change"]], "FoldOptLib.objective_functions": [[8, 0, 0, "-", "axial_plane"], [8, 0, 0, "-", "gaussian"], [8, 0, 0, "-", "geological_knowledge"], [8, 0, 0, "-", "lambda_objective_function"], [8, 0, 0, "-", "least_squares"], [8, 0, 0, "-", "von_mises_fisher"]], "FoldOptLib.objective_functions.axial_plane": [[8, 1, 1, "", "is_axial_plane_compatible"]], "FoldOptLib.objective_functions.gaussian": [[8, 1, 1, "", "gaussian_log_likelihood"], [8, 1, 1, "", "loglikelihood"], [8, 1, 1, "", "loglikelihood_axial_surface"], [8, 1, 1, "", "loglikelihood_fourier_series"]], "FoldOptLib.objective_functions.geological_knowledge": [[8, 2, 1, "", "GeologicalKnowledgeFunctions"], [8, 1, 1, "", "check_fourier_parameters"]], "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions": [[8, 3, 1, "", "asymmetry_objective_function"], [8, 3, 1, "", "axial_surface_objective_function"], [8, 3, 1, "", "axial_trace_objective_function"], [8, 3, 1, "", "fold_axis_wavelength_objective_function"], [8, 3, 1, "", "hinge_angle_objective_function"], [8, 3, 1, "", "setup_objective_functions"], [8, 3, 1, "", "setup_objective_functions_for_restricted_mode"], [8, 3, 1, "", "tightness_objective_function"], [8, 3, 1, "", "wavelength_objective_function"]], "FoldOptLib.objective_functions.lambda_objective_function": [[8, 2, 1, "", "LambdaObjectiveFunction"]], "FoldOptLib.objective_functions.lambda_objective_function.LambdaObjectiveFunction": [[8, 3, 1, "", "make_objective_function"]], "FoldOptLib.objective_functions.least_squares": [[8, 2, 1, "", "LeastSquaresFunctions"]], "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions": [[8, 3, 1, "id0", "cost"], [8, 4, 1, "", "fold_frame"], [8, 3, 1, "id1", "huber_loss"], [8, 4, 1, "", "knowledge_constraints"], [8, 4, 1, "", "kwargs"], [8, 4, 1, "", "rotation_angle"], [8, 3, 1, "id2", "soft_l1_loss"], [8, 3, 1, "id3", "square_residuals"]], "FoldOptLib.objective_functions.von_mises_fisher": [[8, 2, 1, "", "VonMisesFisher"]], "FoldOptLib.objective_functions.von_mises_fisher.VonMisesFisher": [[8, 3, 1, "", "draw_samples"], [8, 3, 1, "", "logpdf"], [8, 3, 1, "", "pdf"]], "FoldOptLib.optimisers": [[9, 0, 0, "-", "axial_surface_optimiser"], [9, 0, 0, "-", "base_optimiser"], [9, 0, 0, "-", "fold_optimiser"], [9, 0, 0, "-", "fourier_optimiser"]], "FoldOptLib.optimisers.axial_surface_optimiser": [[9, 2, 1, "", "AxialSurfaceOptimiser"], [9, 1, 1, "", "calculate_intersection_lineation"]], "FoldOptLib.optimisers.axial_surface_optimiser.AxialSurfaceOptimiser": [[9, 3, 1, "", "angle_optimisation"], [9, 3, 1, "", "generate_initial_guess"], [9, 3, 1, "", "loglikelihood"], [9, 3, 1, "", "mle_optimisation"], [9, 3, 1, "", "optimise"], [9, 3, 1, "", "setup_optimisation"]], "FoldOptLib.optimisers.fold_optimiser": [[9, 2, 1, "", "FoldOptimiser"]], "FoldOptLib.optimisers.fold_optimiser.FoldOptimiser": [[9, 3, 1, "", "generate_initial_guess"], [9, 3, 1, "", "optimise"], [9, 3, 1, "", "optimise_with_differential_evolution"], [9, 3, 1, "", "optimise_with_trust_region"], [9, 3, 1, "", "prepare_and_setup_knowledge_constraints"], [9, 3, 1, "", "setup_optimisation"]], "FoldOptLib.optimisers.fourier_optimiser": [[9, 2, 1, "", "FourierSeriesOptimiser"]], "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser": [[9, 4, 1, "", "fold_frame_coordinate"], [9, 3, 1, "", "generate_initial_guess"], [9, 4, 1, "", "knowledge_constraints"], [9, 4, 1, "", "kwargs"], [9, 3, 1, "", "optimise"], [9, 4, 1, "", "rotation_angle"], [9, 3, 1, "", "setup_optimisation"], [9, 4, 1, "", "x"]], "FoldOptLib.splot": [[10, 0, 0, "-", "splot_processor"]], "FoldOptLib.splot.splot_processor": [[10, 2, 1, "", "SPlotProcessor"]], "FoldOptLib.splot.splot_processor.SPlotProcessor": [[10, 3, 1, "", "calculate_asymmetry"], [10, 3, 1, "", "calculate_splot"], [10, 3, 1, "", "calculate_tightness"], [10, 3, 1, "", "find_amax_amin"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": 0, "foldoptlib": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "packag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "subpackag": 1, "submodul": [1, 2, 3, 5, 6, 7, 8, 9, 10], "version": 1, "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13], "exampl": 2, "misc_funct": 2, "fold_model": 3, "base_fold_frame_build": 3, "engin": 3, "simple_fold_frame_build": 3, "from_loopstructur": 4, "helper": 5, "util": 5, "input": 6, "input_data_check": 6, "input_data_processor": 6, "ipywidgets_interfac": 7, "knowledge_input": 7, "objective_funct": 8, "axial_plan": 8, "gaussian": 8, "geological_knowledg": 8, "lambda_objective_funct": 8, "least_squar": 8, "von_mises_fish": 8, "optimis": 9, "axial_surface_optimis": 9, "base_optimis": 9, "fold_optimis": 9, "fourier_optimis": 9, "splot": 10, "splot_processor": 10, "paramet": 10, "return": 10, "visualis": 11, "welcom": 13, "": 13, "document": 13, "indic": 13, "tabl": 13}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API": [[0, "module-FoldOptLib"]], "FoldOptLib package": [[1, "foldoptlib-package"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "FoldOptLib.version module": [[1, "module-FoldOptLib.version"]], "Module contents": [[1, "module-FoldOptLib"], [2, "module-FoldOptLib.examples"], [3, "module-FoldOptLib.fold_modelling"], [4, "module-FoldOptLib.from_loopstructural"], [5, "module-FoldOptLib.helper"], [6, "module-FoldOptLib.input"], [7, "module-FoldOptLib.ipywidgets_interface"], [8, "module-FoldOptLib.objective_functions"], [9, "module-FoldOptLib.optimisers"], [10, "module-FoldOptLib.splot"], [11, "module-FoldOptLib.visualisation"]], "FoldOptLib.examples package": [[2, "foldoptlib-examples-package"]], "FoldOptLib.examples.misc_functions module": [[2, "module-FoldOptLib.examples.misc_functions"]], "FoldOptLib.fold_modelling package": [[3, "foldoptlib-fold-modelling-package"]], "FoldOptLib.fold_modelling.base_fold_frame_builder module": [[3, "module-FoldOptLib.fold_modelling.base_fold_frame_builder"]], "FoldOptLib.fold_modelling.engine module": [[3, "module-FoldOptLib.fold_modelling.engine"]], "FoldOptLib.fold_modelling.simple_fold_frame_builder module": [[3, "module-FoldOptLib.fold_modelling.simple_fold_frame_builder"]], "FoldOptLib.from_loopstructural package": [[4, "foldoptlib-from-loopstructural-package"]], "FoldOptLib.helper package": [[5, "foldoptlib-helper-package"]], "FoldOptLib.helper.utils module": [[5, "module-FoldOptLib.helper.utils"]], "FoldOptLib.input package": [[6, "foldoptlib-input-package"]], "FoldOptLib.input.input_data_checker module": [[6, "module-FoldOptLib.input.input_data_checker"]], "FoldOptLib.input.input_data_processor module": [[6, "module-FoldOptLib.input.input_data_processor"]], "FoldOptLib.ipywidgets_interface package": [[7, "foldoptlib-ipywidgets-interface-package"]], "FoldOptLib.ipywidgets_interface.knowledge_input module": [[7, "module-FoldOptLib.ipywidgets_interface.knowledge_input"]], "FoldOptLib.objective_functions package": [[8, "foldoptlib-objective-functions-package"]], "FoldOptLib.objective_functions.axial_plane module": [[8, "module-FoldOptLib.objective_functions.axial_plane"]], "FoldOptLib.objective_functions.gaussian module": [[8, "module-FoldOptLib.objective_functions.gaussian"]], "FoldOptLib.objective_functions.geological_knowledge module": [[8, "module-FoldOptLib.objective_functions.geological_knowledge"]], "FoldOptLib.objective_functions.lambda_objective_function module": [[8, "module-FoldOptLib.objective_functions.lambda_objective_function"]], "FoldOptLib.objective_functions.least_squares module": [[8, "module-FoldOptLib.objective_functions.least_squares"]], "FoldOptLib.objective_functions.von_mises_fisher module": [[8, "module-FoldOptLib.objective_functions.von_mises_fisher"]], "FoldOptLib.optimisers package": [[9, "foldoptlib-optimisers-package"]], "FoldOptLib.optimisers.axial_surface_optimiser module": [[9, "module-FoldOptLib.optimisers.axial_surface_optimiser"]], "FoldOptLib.optimisers.base_optimiser module": [[9, "module-FoldOptLib.optimisers.base_optimiser"]], "FoldOptLib.optimisers.fold_optimiser module": [[9, "module-FoldOptLib.optimisers.fold_optimiser"]], "FoldOptLib.optimisers.fourier_optimiser module": [[9, "module-FoldOptLib.optimisers.fourier_optimiser"]], "FoldOptLib.splot package": [[10, "foldoptlib-splot-package"]], "FoldOptLib.splot.splot_processor module": [[10, "module-FoldOptLib.splot.splot_processor"]], "Parameters:": [[10, "parameters"]], "Returns:": [[10, "returns"]], "FoldOptLib.visualisation package": [[11, "foldoptlib-visualisation-package"]], "FoldOptLib": [[12, "module-FoldOptLib"], [14, "foldoptlib"]], "Welcome to FoldOptLib\u2019s documentation!": [[13, "welcome-to-foldoptlib-s-documentation"]], "Contents:": [[13, null]], "Indices and tables": [[13, "indices-and-tables"]]}, "indexentries": {"foldoptlib": [[0, "module-FoldOptLib"], [1, "module-FoldOptLib"], [12, "module-FoldOptLib"]], "module": [[0, "module-FoldOptLib"], [1, "module-FoldOptLib"], [1, "module-FoldOptLib.version"], [2, "module-FoldOptLib.examples"], [2, "module-FoldOptLib.examples.misc_functions"], [3, "module-FoldOptLib.fold_modelling"], [3, "module-FoldOptLib.fold_modelling.base_fold_frame_builder"], [3, "module-FoldOptLib.fold_modelling.engine"], [3, "module-FoldOptLib.fold_modelling.simple_fold_frame_builder"], [4, "module-FoldOptLib.from_loopstructural"], [5, "module-FoldOptLib.helper"], [5, "module-FoldOptLib.helper.utils"], [6, "module-FoldOptLib.input"], [6, "module-FoldOptLib.input.input_data_checker"], [6, "module-FoldOptLib.input.input_data_processor"], [7, "module-FoldOptLib.ipywidgets_interface"], [7, "module-FoldOptLib.ipywidgets_interface.knowledge_input"], [8, "module-FoldOptLib.objective_functions"], [8, "module-FoldOptLib.objective_functions.axial_plane"], [8, "module-FoldOptLib.objective_functions.gaussian"], [8, "module-FoldOptLib.objective_functions.geological_knowledge"], [8, "module-FoldOptLib.objective_functions.lambda_objective_function"], [8, "module-FoldOptLib.objective_functions.least_squares"], [8, "module-FoldOptLib.objective_functions.von_mises_fisher"], [9, "module-FoldOptLib.optimisers"], [9, "module-FoldOptLib.optimisers.axial_surface_optimiser"], [9, "module-FoldOptLib.optimisers.base_optimiser"], [9, "module-FoldOptLib.optimisers.fold_optimiser"], [9, "module-FoldOptLib.optimisers.fourier_optimiser"], [10, "module-FoldOptLib.splot"], [10, "module-FoldOptLib.splot.splot_processor"], [11, "module-FoldOptLib.visualisation"], [12, "module-FoldOptLib"]], "foldoptlib.version": [[1, "module-FoldOptLib.version"]], "foldoptlib.examples": [[2, "module-FoldOptLib.examples"]], "foldoptlib.examples.misc_functions": [[2, "module-FoldOptLib.examples.misc_functions"]], "sample_random_dataset() (in module foldoptlib.examples.misc_functions)": [[2, "FoldOptLib.examples.misc_functions.sample_random_dataset"]], "basefoldframebuilder (class in foldoptlib.fold_modelling.base_fold_frame_builder)": [[3, "FoldOptLib.fold_modelling.base_fold_frame_builder.BaseFoldFrameBuilder"]], "foldmodel (class in foldoptlib.fold_modelling.engine)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel"]], "foldoptlib.fold_modelling": [[3, "module-FoldOptLib.fold_modelling"]], "foldoptlib.fold_modelling.base_fold_frame_builder": [[3, "module-FoldOptLib.fold_modelling.base_fold_frame_builder"]], "foldoptlib.fold_modelling.engine": [[3, "module-FoldOptLib.fold_modelling.engine"]], "foldoptlib.fold_modelling.simple_fold_frame_builder": [[3, "module-FoldOptLib.fold_modelling.simple_fold_frame_builder"]], "axial_surface (foldoptlib.fold_modelling.engine.foldmodel attribute)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.axial_surface"]], "bounding_box (foldoptlib.fold_modelling.engine.foldmodel attribute)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.bounding_box"]], "build_fold_frame() (foldoptlib.fold_modelling.base_fold_frame_builder.basefoldframebuilder method)": [[3, "FoldOptLib.fold_modelling.base_fold_frame_builder.BaseFoldFrameBuilder.build_fold_frame"]], "build_fold_frame() (foldoptlib.fold_modelling.engine.foldmodel method)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.build_fold_frame"]], "calculate_folded_foliation_vectors() (foldoptlib.fold_modelling.engine.foldmodel method)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.calculate_folded_foliation_vectors"]], "calculate_svariogram() (foldoptlib.fold_modelling.engine.foldmodel method)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.calculate_svariogram"]], "create_and_build_fold_event() (foldoptlib.fold_modelling.engine.foldmodel method)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.create_and_build_fold_event"]], "data (foldoptlib.fold_modelling.engine.foldmodel attribute)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.data"]], "fit_fourier_series() (foldoptlib.fold_modelling.engine.foldmodel method)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.fit_fourier_series"]], "fold_function() (in module foldoptlib.fold_modelling.engine)": [[3, "FoldOptLib.fold_modelling.engine.fold_function"]], "get_predicted_foliation() (foldoptlib.fold_modelling.engine.foldmodel method)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.get_predicted_foliation"]], "gradient_data (foldoptlib.fold_modelling.engine.foldmodel attribute)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.gradient_data"]], "initialise_model() (foldoptlib.fold_modelling.base_fold_frame_builder.basefoldframebuilder method)": [[3, "FoldOptLib.fold_modelling.base_fold_frame_builder.BaseFoldFrameBuilder.initialise_model"]], "initialise_model() (foldoptlib.fold_modelling.engine.foldmodel method)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.initialise_model"]], "kwargs (foldoptlib.fold_modelling.engine.foldmodel attribute)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.kwargs"]], "model (foldoptlib.fold_modelling.engine.foldmodel attribute)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.model"]], "points (foldoptlib.fold_modelling.engine.foldmodel attribute)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.points"]], "process_axial_surface_proposition() (foldoptlib.fold_modelling.engine.foldmodel method)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.process_axial_surface_proposition"]], "scaled_points (foldoptlib.fold_modelling.engine.foldmodel attribute)": [[3, "FoldOptLib.fold_modelling.engine.FoldModel.scaled_points"]], "foldoptlib.from_loopstructural": [[4, "module-FoldOptLib.from_loopstructural"]], "foldoptlib.helper": [[5, "module-FoldOptLib.helper"]], "foldoptlib.helper.utils": [[5, "module-FoldOptLib.helper.utils"]], "axial_plane_stereonet() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.axial_plane_stereonet"]], "calculate_intersection_lineation() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.calculate_intersection_lineation"]], "calculate_semivariogram() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.calculate_semivariogram"]], "clean_knowledge_dict() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.clean_knowledge_dict"]], "create_dataset() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.create_dataset"]], "create_dict() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.create_dict"]], "create_fold_frame_dataset() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.create_fold_frame_dataset"]], "create_gradient_dict() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.create_gradient_dict"]], "fourier_series() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.fourier_series"]], "fourier_series_x_intercepts() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.fourier_series_x_intercepts"]], "get_fold_curves() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.get_fold_curves"]], "get_predicted_rotation_angle() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.get_predicted_rotation_angle"]], "get_wavelength_guesses() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.get_wavelength_guesses"]], "normal_vector_to_strike_and_dip() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.normal_vector_to_strike_and_dip"]], "objective_wrapper() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.objective_wrapper"]], "rotate_vector() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.rotate_vector"]], "save_load_object() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.save_load_object"]], "strike_dip_to_vector() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.strike_dip_to_vector"]], "strike_dip_to_vectors() (in module foldoptlib.helper.utils)": [[5, "FoldOptLib.helper.utils.strike_dip_to_vectors"]], "checkinputdata (class in foldoptlib.input.input_data_checker)": [[6, "FoldOptLib.input.input_data_checker.CheckInputData"]], "foldoptlib.input": [[6, "module-FoldOptLib.input"]], "foldoptlib.input.input_data_checker": [[6, "module-FoldOptLib.input.input_data_checker"]], "foldoptlib.input.input_data_processor": [[6, "module-FoldOptLib.input.input_data_processor"]], "inputdataprocessor (class in foldoptlib.input.input_data_processor)": [[6, "FoldOptLib.input.input_data_processor.InputDataProcessor"]], "bounding_box (foldoptlib.input.input_data_checker.checkinputdata attribute)": [[6, "FoldOptLib.input.input_data_checker.CheckInputData.bounding_box"]], "check_bounding_box() (foldoptlib.input.input_data_checker.checkinputdata method)": [[6, "FoldOptLib.input.input_data_checker.CheckInputData.check_bounding_box"]], "check_foliation_data() (foldoptlib.input.input_data_checker.checkinputdata method)": [[6, "FoldOptLib.input.input_data_checker.CheckInputData.check_foliation_data"]], "check_input_data() (foldoptlib.input.input_data_checker.checkinputdata method)": [[6, "FoldOptLib.input.input_data_checker.CheckInputData.check_input_data"]], "check_input_geological_knowledge() (foldoptlib.input.input_data_checker.checkinputdata method)": [[6, "FoldOptLib.input.input_data_checker.CheckInputData.check_input_geological_knowledge"]], "folded_foliation_data (foldoptlib.input.input_data_checker.checkinputdata attribute)": [[6, "FoldOptLib.input.input_data_checker.CheckInputData.folded_foliation_data"]], "knowledge_constraints (foldoptlib.input.input_data_checker.checkinputdata attribute)": [[6, "FoldOptLib.input.input_data_checker.CheckInputData.knowledge_constraints"]], "process_data() (foldoptlib.input.input_data_processor.inputdataprocessor method)": [[6, "FoldOptLib.input.input_data_processor.InputDataProcessor.process_data"]], "foldoptlib.ipywidgets_interface": [[7, "module-FoldOptLib.ipywidgets_interface"]], "foldoptlib.ipywidgets_interface.knowledge_input": [[7, "module-FoldOptLib.ipywidgets_interface.knowledge_input"]], "create_mu_widgets() (in module foldoptlib.ipywidgets_interface.knowledge_input)": [[7, "FoldOptLib.ipywidgets_interface.knowledge_input.create_mu_widgets"]], "create_value_widgets() (in module foldoptlib.ipywidgets_interface.knowledge_input)": [[7, "FoldOptLib.ipywidgets_interface.knowledge_input.create_value_widgets"]], "display_dict_selection() (in module foldoptlib.ipywidgets_interface.knowledge_input)": [[7, "FoldOptLib.ipywidgets_interface.knowledge_input.display_dict_selection"]], "on_add_button_click() (in module foldoptlib.ipywidgets_interface.knowledge_input)": [[7, "FoldOptLib.ipywidgets_interface.knowledge_input.on_add_button_click"]], "on_constraint_change() (in module foldoptlib.ipywidgets_interface.knowledge_input)": [[7, "FoldOptLib.ipywidgets_interface.knowledge_input.on_constraint_change"]], "on_sub_constraint_change() (in module foldoptlib.ipywidgets_interface.knowledge_input)": [[7, "FoldOptLib.ipywidgets_interface.knowledge_input.on_sub_constraint_change"]], "foldoptlib.objective_functions": [[8, "module-FoldOptLib.objective_functions"]], "foldoptlib.objective_functions.axial_plane": [[8, "module-FoldOptLib.objective_functions.axial_plane"]], "foldoptlib.objective_functions.gaussian": [[8, "module-FoldOptLib.objective_functions.gaussian"]], "foldoptlib.objective_functions.geological_knowledge": [[8, "module-FoldOptLib.objective_functions.geological_knowledge"]], "foldoptlib.objective_functions.lambda_objective_function": [[8, "module-FoldOptLib.objective_functions.lambda_objective_function"]], "foldoptlib.objective_functions.least_squares": [[8, "module-FoldOptLib.objective_functions.least_squares"]], "foldoptlib.objective_functions.von_mises_fisher": [[8, "module-FoldOptLib.objective_functions.von_mises_fisher"]], "geologicalknowledgefunctions (class in foldoptlib.objective_functions.geological_knowledge)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions"]], "lambdaobjectivefunction (class in foldoptlib.objective_functions.lambda_objective_function)": [[8, "FoldOptLib.objective_functions.lambda_objective_function.LambdaObjectiveFunction"]], "leastsquaresfunctions (class in foldoptlib.objective_functions.least_squares)": [[8, "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions"]], "vonmisesfisher (class in foldoptlib.objective_functions.von_mises_fisher)": [[8, "FoldOptLib.objective_functions.von_mises_fisher.VonMisesFisher"]], "asymmetry_objective_function() (foldoptlib.objective_functions.geological_knowledge.geologicalknowledgefunctions method)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions.asymmetry_objective_function"]], "axial_surface_objective_function() (foldoptlib.objective_functions.geological_knowledge.geologicalknowledgefunctions method)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions.axial_surface_objective_function"]], "axial_trace_objective_function() (foldoptlib.objective_functions.geological_knowledge.geologicalknowledgefunctions method)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions.axial_trace_objective_function"]], "check_fourier_parameters() (in module foldoptlib.objective_functions.geological_knowledge)": [[8, "FoldOptLib.objective_functions.geological_knowledge.check_fourier_parameters"]], "cost() (foldoptlib.objective_functions.least_squares.leastsquaresfunctions method)": [[8, "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions.cost"], [8, "id0"]], "draw_samples() (foldoptlib.objective_functions.von_mises_fisher.vonmisesfisher method)": [[8, "FoldOptLib.objective_functions.von_mises_fisher.VonMisesFisher.draw_samples"]], "fold_axis_wavelength_objective_function() (foldoptlib.objective_functions.geological_knowledge.geologicalknowledgefunctions method)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions.fold_axis_wavelength_objective_function"]], "fold_frame (foldoptlib.objective_functions.least_squares.leastsquaresfunctions attribute)": [[8, "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions.fold_frame"]], "gaussian_log_likelihood() (in module foldoptlib.objective_functions.gaussian)": [[8, "FoldOptLib.objective_functions.gaussian.gaussian_log_likelihood"]], "hinge_angle_objective_function() (foldoptlib.objective_functions.geological_knowledge.geologicalknowledgefunctions method)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions.hinge_angle_objective_function"]], "huber_loss() (foldoptlib.objective_functions.least_squares.leastsquaresfunctions method)": [[8, "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions.huber_loss"], [8, "id1"]], "is_axial_plane_compatible() (in module foldoptlib.objective_functions.axial_plane)": [[8, "FoldOptLib.objective_functions.axial_plane.is_axial_plane_compatible"]], "knowledge_constraints (foldoptlib.objective_functions.least_squares.leastsquaresfunctions attribute)": [[8, "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions.knowledge_constraints"]], "kwargs (foldoptlib.objective_functions.least_squares.leastsquaresfunctions attribute)": [[8, "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions.kwargs"]], "loglikelihood() (in module foldoptlib.objective_functions.gaussian)": [[8, "FoldOptLib.objective_functions.gaussian.loglikelihood"]], "loglikelihood_axial_surface() (in module foldoptlib.objective_functions.gaussian)": [[8, "FoldOptLib.objective_functions.gaussian.loglikelihood_axial_surface"]], "loglikelihood_fourier_series() (in module foldoptlib.objective_functions.gaussian)": [[8, "FoldOptLib.objective_functions.gaussian.loglikelihood_fourier_series"]], "logpdf() (foldoptlib.objective_functions.von_mises_fisher.vonmisesfisher method)": [[8, "FoldOptLib.objective_functions.von_mises_fisher.VonMisesFisher.logpdf"]], "make_objective_function() (foldoptlib.objective_functions.lambda_objective_function.lambdaobjectivefunction method)": [[8, "FoldOptLib.objective_functions.lambda_objective_function.LambdaObjectiveFunction.make_objective_function"]], "pdf() (foldoptlib.objective_functions.von_mises_fisher.vonmisesfisher method)": [[8, "FoldOptLib.objective_functions.von_mises_fisher.VonMisesFisher.pdf"]], "rotation_angle (foldoptlib.objective_functions.least_squares.leastsquaresfunctions attribute)": [[8, "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions.rotation_angle"]], "setup_objective_functions() (foldoptlib.objective_functions.geological_knowledge.geologicalknowledgefunctions method)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions.setup_objective_functions"]], "setup_objective_functions_for_restricted_mode() (foldoptlib.objective_functions.geological_knowledge.geologicalknowledgefunctions method)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions.setup_objective_functions_for_restricted_mode"]], "soft_l1_loss() (foldoptlib.objective_functions.least_squares.leastsquaresfunctions method)": [[8, "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions.soft_l1_loss"], [8, "id2"]], "square_residuals() (foldoptlib.objective_functions.least_squares.leastsquaresfunctions method)": [[8, "FoldOptLib.objective_functions.least_squares.LeastSquaresFunctions.square_residuals"], [8, "id3"]], "tightness_objective_function() (foldoptlib.objective_functions.geological_knowledge.geologicalknowledgefunctions method)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions.tightness_objective_function"]], "wavelength_objective_function() (foldoptlib.objective_functions.geological_knowledge.geologicalknowledgefunctions method)": [[8, "FoldOptLib.objective_functions.geological_knowledge.GeologicalKnowledgeFunctions.wavelength_objective_function"]], "axialsurfaceoptimiser (class in foldoptlib.optimisers.axial_surface_optimiser)": [[9, "FoldOptLib.optimisers.axial_surface_optimiser.AxialSurfaceOptimiser"]], "foldoptlib.optimisers": [[9, "module-FoldOptLib.optimisers"]], "foldoptlib.optimisers.axial_surface_optimiser": [[9, "module-FoldOptLib.optimisers.axial_surface_optimiser"]], "foldoptlib.optimisers.base_optimiser": [[9, "module-FoldOptLib.optimisers.base_optimiser"]], "foldoptlib.optimisers.fold_optimiser": [[9, "module-FoldOptLib.optimisers.fold_optimiser"]], "foldoptlib.optimisers.fourier_optimiser": [[9, "module-FoldOptLib.optimisers.fourier_optimiser"]], "foldoptimiser (class in foldoptlib.optimisers.fold_optimiser)": [[9, "FoldOptLib.optimisers.fold_optimiser.FoldOptimiser"]], "fourierseriesoptimiser (class in foldoptlib.optimisers.fourier_optimiser)": [[9, "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser"]], "angle_optimisation() (foldoptlib.optimisers.axial_surface_optimiser.axialsurfaceoptimiser method)": [[9, "FoldOptLib.optimisers.axial_surface_optimiser.AxialSurfaceOptimiser.angle_optimisation"]], "calculate_intersection_lineation() (in module foldoptlib.optimisers.axial_surface_optimiser)": [[9, "FoldOptLib.optimisers.axial_surface_optimiser.calculate_intersection_lineation"]], "fold_frame_coordinate (foldoptlib.optimisers.fourier_optimiser.fourierseriesoptimiser attribute)": [[9, "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser.fold_frame_coordinate"]], "generate_initial_guess() (foldoptlib.optimisers.axial_surface_optimiser.axialsurfaceoptimiser method)": [[9, "FoldOptLib.optimisers.axial_surface_optimiser.AxialSurfaceOptimiser.generate_initial_guess"]], "generate_initial_guess() (foldoptlib.optimisers.fold_optimiser.foldoptimiser method)": [[9, "FoldOptLib.optimisers.fold_optimiser.FoldOptimiser.generate_initial_guess"]], "generate_initial_guess() (foldoptlib.optimisers.fourier_optimiser.fourierseriesoptimiser method)": [[9, "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser.generate_initial_guess"]], "knowledge_constraints (foldoptlib.optimisers.fourier_optimiser.fourierseriesoptimiser attribute)": [[9, "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser.knowledge_constraints"]], "kwargs (foldoptlib.optimisers.fourier_optimiser.fourierseriesoptimiser attribute)": [[9, "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser.kwargs"]], "loglikelihood() (foldoptlib.optimisers.axial_surface_optimiser.axialsurfaceoptimiser method)": [[9, "FoldOptLib.optimisers.axial_surface_optimiser.AxialSurfaceOptimiser.loglikelihood"]], "mle_optimisation() (foldoptlib.optimisers.axial_surface_optimiser.axialsurfaceoptimiser method)": [[9, "FoldOptLib.optimisers.axial_surface_optimiser.AxialSurfaceOptimiser.mle_optimisation"]], "optimise() (foldoptlib.optimisers.axial_surface_optimiser.axialsurfaceoptimiser method)": [[9, "FoldOptLib.optimisers.axial_surface_optimiser.AxialSurfaceOptimiser.optimise"]], "optimise() (foldoptlib.optimisers.fold_optimiser.foldoptimiser method)": [[9, "FoldOptLib.optimisers.fold_optimiser.FoldOptimiser.optimise"]], "optimise() (foldoptlib.optimisers.fourier_optimiser.fourierseriesoptimiser method)": [[9, "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser.optimise"]], "optimise_with_differential_evolution() (foldoptlib.optimisers.fold_optimiser.foldoptimiser method)": [[9, "FoldOptLib.optimisers.fold_optimiser.FoldOptimiser.optimise_with_differential_evolution"]], "optimise_with_trust_region() (foldoptlib.optimisers.fold_optimiser.foldoptimiser method)": [[9, "FoldOptLib.optimisers.fold_optimiser.FoldOptimiser.optimise_with_trust_region"]], "prepare_and_setup_knowledge_constraints() (foldoptlib.optimisers.fold_optimiser.foldoptimiser method)": [[9, "FoldOptLib.optimisers.fold_optimiser.FoldOptimiser.prepare_and_setup_knowledge_constraints"]], "rotation_angle (foldoptlib.optimisers.fourier_optimiser.fourierseriesoptimiser attribute)": [[9, "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser.rotation_angle"]], "setup_optimisation() (foldoptlib.optimisers.axial_surface_optimiser.axialsurfaceoptimiser method)": [[9, "FoldOptLib.optimisers.axial_surface_optimiser.AxialSurfaceOptimiser.setup_optimisation"]], "setup_optimisation() (foldoptlib.optimisers.fold_optimiser.foldoptimiser method)": [[9, "FoldOptLib.optimisers.fold_optimiser.FoldOptimiser.setup_optimisation"]], "setup_optimisation() (foldoptlib.optimisers.fourier_optimiser.fourierseriesoptimiser method)": [[9, "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser.setup_optimisation"]], "x (foldoptlib.optimisers.fourier_optimiser.fourierseriesoptimiser attribute)": [[9, "FoldOptLib.optimisers.fourier_optimiser.FourierSeriesOptimiser.x"]], "foldoptlib.splot": [[10, "module-FoldOptLib.splot"]], "foldoptlib.splot.splot_processor": [[10, "module-FoldOptLib.splot.splot_processor"]], "splotprocessor (class in foldoptlib.splot.splot_processor)": [[10, "FoldOptLib.splot.splot_processor.SPlotProcessor"]], "calculate_asymmetry() (foldoptlib.splot.splot_processor.splotprocessor method)": [[10, "FoldOptLib.splot.splot_processor.SPlotProcessor.calculate_asymmetry"]], "calculate_splot() (foldoptlib.splot.splot_processor.splotprocessor method)": [[10, "FoldOptLib.splot.splot_processor.SPlotProcessor.calculate_splot"]], "calculate_tightness() (foldoptlib.splot.splot_processor.splotprocessor method)": [[10, "FoldOptLib.splot.splot_processor.SPlotProcessor.calculate_tightness"]], "find_amax_amin() (foldoptlib.splot.splot_processor.splotprocessor method)": [[10, "FoldOptLib.splot.splot_processor.SPlotProcessor.find_amax_amin"]], "foldoptlib.visualisation": [[11, "module-FoldOptLib.visualisation"]]}})